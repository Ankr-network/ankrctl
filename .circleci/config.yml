# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # Build in Go base container
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/Ankr-network/dccn-cli
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys:
          fingerprints:
            - "91:de:2e:da:16:ab:18:de:71:0f:e2:bf:5f:44:5c:55"
      - run:
          name: Copy ssh key in the circleci build context
          command: |
            cp ${HOME}/.ssh/id_rsa id_rsa
      - run:
          name: Set dependency
          command: |
            dep ensure --vendor-only
      - run:
          name: Install AWSCLI
          command: |
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
      - run:
          name: Log in to AWS ECR
          command: eval $(aws ecr get-login --no-include-email --region $AWS_REGION)
      - run:
          name: "Build & Push Docker Image"
          command: |
            BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
            SHA1_SHORT=$(git rev-parse --short HEAD)
            DATE=`date +%Y%m%d%H%M%S`
            URL_BRANCH=""
            if [[ ($BRANCH_NAME == "master") ]]
            then
              BRANCH_NAME="stage"
              URL_BRANCH="client.dccn.ankr.com"
              TENDERMINT_URL="https://chain-01.dccn.ankr.com;https://chain-02.dccn.ankr.com;https://chain-03.dccn.ankr.com"
              TENDERMINT_PORT="443"
            elif [[ ($BRANCH_NAME == "develop") ]]
            then
              BRANCH_NAME="dev"
              URL_BRANCH="client-stage.dccn.ankr.com"
              TENDERMINT_URL="http://chain-stage.dccn.ankr.com"
              TENDERMINT_PORT="26657"
            else 
              BRANCH_NAME="feat"
              URL_BRANCH="client-dev.dccn.ankr.com"
              TENDERMINT_URL="http://chain-dev.dccn.ankr.com"
              TENDERMINT_PORT="26657"
            fi
            export URL_BRANCH
            
            docker build --build-arg URL_BRANCH=${URL_BRANCH} --build-arg TENDERMINT_URL=${TENDERMINT_URL} --build-arg TENDERMINT_PORT=${TENDERMINT_PORT} -t ankrctl:$BRANCH_NAME .
            for TAG in $BRANCH_NAME $SHA1_SHORT $BRANCH_NAME$DATE; do
            docker tag ankrctl:$BRANCH_NAME $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com/ankrctl:$TAG
            docker push $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com/ankrctl:$TAG
            done

            if [[ ($BRANCH_NAME == "stage") ]]
            then
              docker login -u $DOCKER_USER -p $DOCKER_PASSWD
              docker tag ankrctl:$BRANCH_NAME ankrnetwork/akrctl:latest
              docker push ankrnetwork/ankrctl:latest
            fi



  test:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/Ankr-network/dccn-cli
    steps:
      - checkout
      - run:
          name: dep ensure
          command: dep ensure --update
      - run:
          name: make test file
          command: |
            Test_BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
            Test_File = ""
            if [[ ($Test_BRANCH_NAME == "master") ]]
            then
              Test_BRANCH_NAME="stage"
              Test_File = make build_lin_stage

            elif [[ ($Test_BRANCH_NAME == "develop") ]]
            then
              Test_BRANCH_NAME="dev"
              Test_File = make build_lin_dev

            else
              Test_BRANCH_NAME="feat"
              Test_File = make build_lin_dev
            fi
            export Test_File

            ${Test_File}

      - run:
          name: Test
          command: |
            sleep 30
            go test ./commands/test -v

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build